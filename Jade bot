bot
    .on(bot.triggers.cron, '* * * * *')
    .do(function(bot, conf, args) {
        // do stuff 
    });
 
// will be executed every minute 
bot
    .on(bot.triggers['mention-command'], 'say', ['word'])
    .do(function(bot, conf, args) {
        this.reply(args.commandArgs.word);
    });
 
//-> @bot say hello 
//<- hello 
bot
    .on(bot.triggers.command, 'say', ['word'])
    .do(function(bot, conf, args) {
        this.reply(args.commandArgs.word);
    });
 
//-> !say hello 
store.getAndUpdate(user, function(data, done) {
    data.someCounter++;
    done();
});
//<- hello 
restrict({
    /* at least one of */
    serverId: serverId or array of serverIds,
    channelId: channelId or array of channelIds,
var myTrigger = require('./my-trigger');
 
// bot initialisation 
 
bot.on(myTrigger, firstTriggerContructorArgument, secondTriggerContructorArgument...)
    userId: userId or array of userIds
})
bot
    .on(bot.triggers.react, /hey|hello/)
    .do(function(bot, conf, args) { /* <- this is the task */
        console.log(args.message);
    });
trigger.addHelper('store', function(bot, args, done) {
    userStore.get(args.message.author, function(data) {
        done(data);
    });
})
.do(function(bot, conf, args) {
    this.store // will contain the data fetched above 
});
var Bot = require('discord-bot');
 
var bot = new Bot({
    email: <email>,
    password: <pass>
});
 
bot
    .on(bot.triggers.command, 'hello')
    .do(function(bot, conf, args) {
        this.reply('world');
    });
 
bot.connect();
var Bot = require('discord-bot');
 
var bot = new Bot({
    email: <email>,
    password: <pass>
});
 
bot
    .on(bot.triggers.command, 'hello')
    .do(function(bot, conf, args) {
        this.reply('world');
    });
 
bot.connect();
bot
    .on(bot.triggers.cron, '* * * * *')
    .do(function(bot, conf, args) {
        // do stuff 
    });
 
// will be executed every minute 
bot.addService('store', bot.services['mongo-store']('mongodb://localhost/discord'));

